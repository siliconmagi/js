// Function:  creation and calling
function reusableFunction() {
    console.log("Hi World");
}

reusableFunction();

// Function: passing values via parameters
// Parameters are placeholder variables for values that will be passed into a function.
// Arguments are the actual values passed into a function.
function functionWithArgs(a, b) {
    console.log(a + b);
}
functionWithArgs(1, 2);

// Scope is the visibility of variables
// Global scope are variables declared outside a function
// variables used without the "var" keyword are automatically created in global scope

var myGlobal = 10;

function fun1() {
    oopsGlobal = 5;
}

function fun2() {
    var output = "";
    if (typeof myGlobal != "undefined") {
        output += "myGlobal: " + myGlobal;
    }
    if (typeof oopsGlobal != "undefined") {
        output += " oopsGlobal: " + oopsGlobal;
    }
    console.log(output);
}

// Local Scope:  variables created within a function including function parameters

function myLocalScope() {
    var myVar = "hi";
    console.log(myVar);
}
myLocalScope();

// Global vs Local Scope: when a variable name is used in both global and local scope, local takes precedence
var outerWear = "T-Shirt";

function myOutfit() {
    var outerWear = "sweater";
    return outerWear;
}
console.log(myOutfit());

// Return values from function via Return

function timesFive(num) {
    return num * 5;
}

console.log(timesFive(5));

// Assigment with a returned values
var processed = 0;

function processArg(num) {
    return (num + 3) / 5;
}

processed = processArg(7);
console.log(processed);

// Stand in Line:  add number to end of array, then remove the first element of array and return it.

function nextInLine(arr, item) {
    arr.push(item);
    var removeFirst = arr.shift();
    return removeFirst;
}
// Test Setup
var testArr = [1, 2, 3, 4, 5];

// Display Code
console.log("Before: " + JSON.stringify(testArr));
console.log(nextInLine(testArr, 6)); // Modify this line to test
console.log("After: " + JSON.stringify(testArr));

// Booleans:  values that are either true or false
function welcomeToBooleans() {
    return true;
}
console.log(welcomeToBooleans());

// Conditional Logic via If statements
function trueOrFalse(wasThatTrue) {
    if (wasThatTrue) {
        return "Yes, that was true";
    }
    return "No, that was false";
}

console.log(trueOrFalse(true));

// Comparison Operator:  equality ==
// JS can compare two different data types ie numbers and strings by converting one type to another
// Setup
function testEqual(val) {
    if (val == 12) { // Change this line
        return "Equal";
    }
    return "Not Equal";
}

// Change this value to test
console.log(testEqual(10));

// Comparison Operator:  strict ===
// strict equality tests both data type and value
function testStrict(val) {
    if (val === 7) {
        return "Equal";
    }
    return "Not Equal";
}

console.log(testStrict(10));

// Comparison Operator:  Inequality !=
// converts data types of values when comparing
function testNotEqual(val) {
    if (val != 99) {
        return "Not Equal";
    }
    return "Equal";
}

console.log(testNotEqual(10));

// Comparison Operator:  Strict Inequality !==
// does not convert data types of values when comparing
function testStrictNotEqual(val) {
    if (val !== 17) {
        return "Not Equal";
    }
    return "Equal";
}

console.log(testStrictNotEqual(10));

// Comparison Operator:  greater than >
function testGreaterThan(val) {
    if (val > 100) { // Change this line
        return "Over 100";
    }
    if (val > 10) { // Change this line
        return "Over 10";
    }
    return "10 or Under";
}

console.log(testGreaterThan(10));

// Comparison Operator:  greater than or equal to >=
function testGreaterOrEqual(val) {
    if (val >= 20) { // Change this line
        return "20 or Over";
    }
    if (val >= 10) { // Change this line
        return "10 or Over";
    }
    return "9 or Under";
}

console.log(testGreaterOrEqual(10));

// Comparison Operator:  less than <
function testLessThan(val) {
    if (val < 25) { // Change this line
        return "Under 25";
    }
    if (val < 55) { // Change this line
        return "Under 55";
    }
    return "55 or Over";
}

// Change this value to test
console.log(testLessThan(10));

// Comparison Operator:  less than or equal to <=
function testLessOrEqual(val) {
    if (val <= 12) { // Change this line
        return "Smaller Than or Equal to 12";
    }
    if (val <= 24) { // Change this line
        return "Smaller Than or Equal to 24";
    }
    return "25 or More";
}

console.log(testLessOrEqual(10));

// Logical And Operator &&
function testLogicalAnd(val) {
    if (val <= 50 && val >= 25) {
        return "Yes";
    }
    return "No";
}

console.log(testLogicalAnd(10));

// Logical Or Operator ||
function testLogicalOr(val) {
    if (val < 10 || val > 20) {
        return "Outside";
    }
    return "Inside";
}

// Change this value to test
console.log(testLogicalOr(15));

// Else Statements

function testElse(val) {
    var result = "";
    if (val > 5) {
        result = "Bigger than 5";
    } else {
        result = "5 or Smaller";
    }
    return result;
}

console.log(testElse(4));

// Else Statements:  chaining Else If
function testElseIf(val) {
    if (val > 10) {
        return "Greater than 10";
    } else if (val < 5) {
        return "Smaller than 5";
    } else {
        return "Between 5 and 10";
    }
}
console.log(testElseIf(7));

// Logical Order in If Else Statements
// loops are executed top-to-bottom
function orderMyLogic(val) {
    if (val < 5) {
        return "Less than 5";
    } else if (val < 10) {
        return "Less than 10";
    } else {
        return "Greater than or equal to 10";
    }
}
console.log(orderMyLogic(7));

// Chaining If Else Statements
function testSize(num) {
    if (num < 5) {
        return "Tiny";
    } else if (num < 10) {
        return "Small";
    } else if (num < 15) {
        return "Medium";
    } else if (num < 20) {
        return "Large";
    } else {
        return "Huge";
    }
}

console.log(testSize(7));

// Golf Code
function golfScore(par, strokes) {
    if (strokes === 1) {
        return "Hole-in-one!";
    } else if (strokes <= (par - 2)) {
        return "Eagle";
    } else if (strokes === (par - 1)) {
        return "Birdie";
    } else if (strokes === par) {
        return "Par";
    } else if (strokes === (par + 1)) {
        return "Bogey";
    } else if (strokes === (par + 2)) {
        return "Double Bogey";
    } else if (strokes >= (par + 3)) {
        return "Go Home!";
    }
}
console.log(golfScore(1, 1));
