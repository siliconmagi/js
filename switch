// Switch statements - tests a value against many case statements until a break is encountered.
// Statements are executed from the first matched case value until a break is encountered.
// Case values are tested with === strict equality

function caseInSwitch(val) {
    var answer = "";
    switch (val) {
        case 1:
            answer = "alpha";
            break;
        case 2:
            answer = "beta";
            break;
        case 3:
            answer = "gamma";
            break;
        case 4:
            answer = "delta";
            break;
    }
    return answer;
}

console.log(caseInSwitch(1));

// Switch statements:  default statements
function switchOfStuff(val) {
    var answer = "";
    switch (val) {
        case "a":
            answer = 'apple';
            break;
        case "b":
            answer = 'bird';
            break;
        case "c":
            answer = 'cat';
            break;
        default:
            answer = 'stuff';
            break;
    }
    return answer;
}
console.log(switchOfStuff('a'));

// Switch Statements:  Multiple cases single result

function sequentialSizes(val) {
    var answer = "";
    switch (val) {
        case 1:
        case 2:
        case 3:
            answer = "Low";
            break;
        case 4:
        case 5:
        case 6:
            answer = "Mid";
            break;
        case 7:
        case 8:
        case 9:
            answer = "High";
            break;
    }
    return answer;
}

console.log(sequentialSizes(1));

// Switch Statements:  Replacing If Else chains

function chainToSwitch(val) {
    var answer = "";
    switch (val) {
        case 'bob':
            answer = "Marley";
            break;
        case 42:
            answer = "The Answer";
            break;
        case 1:
            answer = "There is no #1";
            break;
        case 99:
            answer = "Missed me by this much!";
            break;
        case 7:
            answer = "Ate Nine";
            break;
    }
    return answer;
}
console.log(chainToSwitch(7));

// Returning Boolean Values from Functions via comparison operators ===, <, > etc.
function isLess(a, b) {
    return a < b;
}
console.log(isLess(10, 15));

// Return Early Pattern for Functions
function abTest(a, b) {
    var answer = "";
    if (a < 0) {
        return undefined;
    } else if (b < 0) {
        return undefined;
    }
    return Math.round(Math.pow(Math.sqrt(a) + Math.sqrt(b), 2));
}
console.log(abTest(2, 2));

// Counting Cards
var count = 0;

function cc(card) {
    // Only change code below this line
    var result;
    switch (card) {
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
            count += 1;
            break;
        case 7:
        case 8:
        case 9:
            //add nothing to count
            break;
        case 10:
        case "J":
        case "Q":
        case "K":
        case "A":
            count -= 1;
    }
    if (count > 0) {
        result = count + " Bet";
    } else if (count <= 0) {
        result = count + " Hold";
    }
    console.log("card: " + card + " " + result);


    return result;
    // Only change code above this line
}

// Add/remove calls to test your function.
// Note: Only the last will display
cc(2);
cc(3);
cc(7);
cc('K');
cc('A');
